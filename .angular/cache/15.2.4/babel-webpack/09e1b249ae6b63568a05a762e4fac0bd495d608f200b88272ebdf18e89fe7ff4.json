{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiBaseUrl = 'api/users';\n    this.datiUtente = new ReplaySubject();\n    this.userRole = new ReplaySubject();\n  }\n  insertUser(user) {\n    return this.http.post(`${this.apiBaseUrl}/signup`, user);\n  }\n  getUser(email) {\n    const emailUtente = {\n      email: email\n    };\n    return this.http.post(`${this.apiBaseUrl}/user`, emailUtente);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,aAAa,QAAQ,MAAM;;;AAKhD,OAAM,MAAOC,WAAW;EAOtBC,YAAqBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALzB,eAAU,GAAG,WAAW;IAExB,eAAU,GAAG,IAAIH,aAAa,EAAE;IAChC,aAAQ,GAAG,IAAIA,aAAa,EAAE;EAEW;EAEzCI,UAAU,CAACC,IAAS;IAClB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,GAAG,IAAI,CAACC,UAAU,SAAS,EAAEF,IAAI,CAAC;EAC/D;EAEAG,OAAO,CAACC,KAAa;IACnB,MAAMC,WAAW,GAAG;MAACD,KAAK,EAAEA;IAAK,CAAC;IAClC,OAAO,IAAI,CAACN,IAAI,CAACG,IAAI,CAAM,GAAG,IAAI,CAACC,UAAU,OAAO,EAAEG,WAAW,CAAC;EACpE;;AAhBWT,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAU,SAAXV,WAAW;EAAAW,YAFV;AAAM","names":["ReplaySubject","UserService","constructor","http","insertUser","user","post","apiBaseUrl","getUser","email","emailUtente","factory","providedIn"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/roma_in_mostra/client/src/app/service/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  apiBaseUrl = 'api/users';\n\n  datiUtente = new ReplaySubject();\n  userRole = new ReplaySubject();\n\n  constructor( private http: HttpClient) { }\n\n  insertUser(user: any): Observable<any>{\n    return this.http.post<any>(`${this.apiBaseUrl}/signup`, user);\n  }\n\n  getUser(email: string): Observable<any>{\n    const emailUtente = {email: email};\n    return this.http.post<any>(`${this.apiBaseUrl}/user`, emailUtente);\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}