{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MostraService {\n  constructor(http) {\n    this.http = http;\n    this.apiBaseUrl = \"api/mostre\";\n  }\n  // getMostre(): Observable<Mostra[]>{\n  //   return of (MOSTRE);\n  // }\n  // getMostra(id: number): Observable<Mostra> {\n  //   const mostra = MOSTRE.find(mostra => mostra._id == id);\n  //   return of (mostra);\n  // }\n  getMostre() {\n    return this.http.get(`${this.apiBaseUrl}/`);\n  }\n  getMostra(id) {\n    return this.http.get(`${this.apiBaseUrl}/${id}`);\n  }\n  postMostra(res) {\n    return this.http.post(`${this.apiBaseUrl}/`, res);\n  }\n}\nMostraService.ɵfac = function MostraService_Factory(t) {\n  return new (t || MostraService)(i0.ɵɵinject(i1.HttpClient));\n};\nMostraService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MostraService,\n  factory: MostraService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,aAAa;EAIxBC,YAAqBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFzB,eAAU,GAAG,YAAY;EAEe;EAExC;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEAC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,UAAU,GAAG,CAAC;EACvD;EAEAC,SAAS,CAACC,EAAU;IAClB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,UAAU,IAAIE,EAAE,EAAE,CAAC;EAC1D;EAEAC,UAAU,CAACC,GAAQ;IACjB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACL,UAAU,GAAG,EAAEI,GAAG,CAAC;EACxD;;AA1BWT,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAW,SAAbX,aAAa;EAAAY,YAFZ;AAAM","names":["MostraService","constructor","http","getMostre","get","apiBaseUrl","getMostra","id","postMostra","res","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/roma_in_mostra/client/src/app/service/mostra.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Mostra } from '../models/mostra.model';\nimport { MOSTRE } from '../mocks/mostre.mock';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MostraService {\n\n  apiBaseUrl = \"api/mostre\";\n\n  constructor( private http: HttpClient) {}\n\n  // getMostre(): Observable<Mostra[]>{\n  //   return of (MOSTRE);\n  // }\n\n  // getMostra(id: number): Observable<Mostra> {\n  //   const mostra = MOSTRE.find(mostra => mostra._id == id);\n  //   return of (mostra);\n\n  // }\n\n  getMostre() {\n    return this.http.get<Mostra[]>(`${this.apiBaseUrl}/`);\n  }\n\n  getMostra(id: string): Observable<Mostra>{\n    return this.http.get<Mostra>(`${this.apiBaseUrl}/${id}`);\n  }\n\n  postMostra(res: any): Observable<any>{\n    return this.http.post<any>(`${this.apiBaseUrl}/`, res);\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}