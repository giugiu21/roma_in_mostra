{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"primeng/api\";\nexport class LoginComponent {\n  constructor(authService, router, messageService) {\n    this.authService = authService;\n    this.router = router;\n    this.messageService = messageService;\n  }\n  onSubmit(credentials) {\n    if (credentials.email !== null && credentials.password !== null) {\n      this.authService.login(credentials.email, credentials.password).subscribe({\n        next: res => {\n          if (res) {\n            this.authService.saveStorage(res);\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Success!',\n              detail: 'il Login è andato a buon fine!',\n              life: 2000\n            });\n            setTimeout(() => this.router.navigate(['home']), 2000);\n          } else {\n            this.loginError = \"Email o password errati\";\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Error!',\n              detail: 'il Login non è andato a buon fine'\n            });\n          }\n        },\n        error: err => {\n          console.log(err);\n          this.loginError = \"Email o password errati\";\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Error!',\n            detail: 'il Login non è andato a buon fine'\n          });\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MessageService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  features: [i0.ɵɵProvidersFeature([MessageService])],\n  decls: 2,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,cAAc,QAAQ,aAAa;;;;;AAQ5C,OAAM,MAAOC,cAAc;EAKzBC,YACUC,WAAwB,EACxBC,MAAc,EACdC,cAA8B;IAF9B,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;EACtB;EAEFC,QAAQ,CAACC,WAAgB;IACvB,IAAGA,WAAW,CAACC,KAAK,KAAK,IAAI,IAAID,WAAW,CAACE,QAAQ,KAAK,IAAI,EAAC;MAC7D,IAAI,CAACN,WAAW,CAACO,KAAK,CAACH,WAAW,CAACC,KAAK,EAAED,WAAW,CAACE,QAAQ,CAAC,CAC9DE,SAAS,CAAC;QACTC,IAAI,EAAGC,GAAG,IAAI;UACZ,IAAGA,GAAG,EAAC;YACL,IAAI,CAACV,WAAW,CAACW,WAAW,CAACD,GAAG,CAAC;YACnC,IAAI,CAACR,cAAc,CAACU,GAAG,CAAC;cAACC,QAAQ,EAAE,SAAS;cAAEC,OAAO,EAAE,UAAU;cAAEC,MAAM,EAAE,gCAAgC;cAAEC,IAAI,EAAE;YAAI,CAAC,CAAC;YACzHC,UAAU,CAAC,MAAM,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC;WAErD,MACG;YACF,IAAI,CAACC,UAAU,GAAG,yBAAyB;YAC3C,IAAI,CAACjB,cAAc,CAACU,GAAG,CAAC;cAACC,QAAQ,EAAE,OAAO;cAAEC,OAAO,EAAE,QAAQ;cAAEC,MAAM,EAAE;YAAmC,CAAC,CAAC;;QAEhH,CAAC;QACDK,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAChB,IAAI,CAACF,UAAU,GAAG,yBAAyB;UAC3C,IAAI,CAACjB,cAAc,CAACU,GAAG,CAAC;YAACC,QAAQ,EAAE,OAAO;YAAEC,OAAO,EAAE,QAAQ;YAAEC,MAAM,EAAE;UAAmC,CAAC,CAAC;QAC9G;OACD,CAAC;;EAEN;;AAlCWjB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA0B;EAAAC,iCAFd,CAAC5B,cAAc,CAAC;EAAA6B;EAAAC;EAAAC;IAAA;MCT7BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI","names":["MessageService","LoginComponent","constructor","authService","router","messageService","onSubmit","credentials","email","password","login","subscribe","next","res","saveStorage","add","severity","summary","detail","life","setTimeout","navigate","loginError","error","err","console","log","selectors","features","decls","vars","template","i0"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/roma_in_mostra/client/src/app/user/login/login.component.ts","/Users/giulia/Documents/Progetti/roma_in_mostra/client/src/app/user/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  providers: [MessageService],\n})\nexport class LoginComponent {\n\n  loginError: string;\n  user: any;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messageService: MessageService,\n  ){}\n\n  onSubmit(credentials: any){\n    if(credentials.email !== null && credentials.password !== null){\n      this.authService.login(credentials.email, credentials.password)\n      .subscribe({\n        next: (res) =>{\n          if(res){\n            this.authService.saveStorage(res);\n          this.messageService.add({severity: 'success', summary: 'Success!', detail: 'il Login è andato a buon fine!', life: 2000});\n          setTimeout(() => this.router.navigate(['home']), 2000);\n\n          }\n          else{\n            this.loginError = \"Email o password errati\";\n            this.messageService.add({severity: 'error', summary: 'Error!', detail: 'il Login non è andato a buon fine'});\n          }\n        },\n        error: (err) =>{\n          console.log(err);\n          this.loginError = \"Email o password errati\";\n          this.messageService.add({severity: 'error', summary: 'Error!', detail: 'il Login non è andato a buon fine'});\n        }\n      })\n    }\n  }\n}\n","<p>login works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}