{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class LoggedInGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const isLogged = this.authService.isLogged();\n    if (!isLogged) {\n      this.router.navigate(['home']);\n    }\n    return isLogged;\n  }\n}\nLoggedInGuard.ɵfac = function LoggedInGuard_Factory(t) {\n  return new (t || LoggedInGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nLoggedInGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoggedInGuard,\n  factory: LoggedInGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,aAAa;EAExBC,YACUC,WAAwB,EACxBC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;EACd;EAEFC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,MAAMC,QAAQ,GAAG,IAAI,CAACL,WAAW,CAACK,QAAQ,EAAE;IAC5C,IAAG,CAACA,QAAQ,EAAC;MACX,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;;IAEhC,OAAOD,QAAQ;EACjB;;AAfWP,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAS,SAAbT,aAAa;EAAAU,YAFZ;AAAM","names":["LoggedInGuard","constructor","authService","router","canActivate","route","state","isLogged","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/roma_in_mostra/client/src/app/logged-in.guard.ts"],"sourcesContent":["import { AuthService } from 'src/app/service/auth.service';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedInGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ){}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isLogged = this.authService.isLogged();\n    if(!isLogged){\n      this.router.navigate(['home']);\n    }\n    return isLogged;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}