{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./user.service\";\nexport class AuthService {\n  constructor(http, UserService) {\n    this.http = http;\n    this.UserService = UserService;\n    this.apiBaseUrl = 'api/users';\n  }\n  login(email, password) {\n    const user = {\n      email: email,\n      password: password\n    };\n    return this.http.post(`${this.apiBaseUrl}/login`, user);\n  }\n  saveStorage(res) {\n    const user = {\n      name: res.name,\n      email: res.email,\n      password: res.password,\n      role: res.role,\n      createdAt: res.createdAt\n    };\n    this.UserService.userRole.next(res.role);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  isLogged() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.UserService.userRole.next('');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EAItBC,YACUC,IAAgB,EAChBC,WAAwB;IADxB,SAAI,GAAJD,IAAI;IACJ,gBAAW,GAAXC,WAAW;IAJrB,eAAU,GAAG,WAAW;EAKpB;EAEJC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACnC,MAAMC,IAAI,GAAG;MAACF,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC;IAC/C,OAAO,IAAI,CAACJ,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACC,UAAU,QAAQ,EAAEF,IAAI,CAAC;EAC9D;EAEAG,WAAW,CAACC,GAAQ;IAClB,MAAMJ,IAAI,GAAG;MACXK,IAAI,EAAED,GAAG,CAACC,IAAI;MACdP,KAAK,EAAEM,GAAG,CAACN,KAAK;MAChBC,QAAQ,EAAEK,GAAG,CAACL,QAAQ;MACtBO,IAAI,EAAEF,GAAG,CAACE,IAAI;MACdC,SAAS,EAAEH,GAAG,CAACG;KAChB;IAED,IAAI,CAACX,WAAW,CAACY,QAAQ,CAACC,IAAI,CAACL,GAAG,CAACE,IAAI,CAAC;IACxCI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,CAAC;EACpD;EAEAc,QAAQ;IACN,OAAOF,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD;EAEAC,MAAM;IACJP,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACtB,WAAW,CAACY,QAAQ,CAACC,IAAI,CAAC,EAAE,CAAC;EACpC;;AAlCWhB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA0B,SAAX1B,WAAW;EAAA2B,YAFV;AAAM","names":["AuthService","constructor","http","UserService","login","email","password","user","post","apiBaseUrl","saveStorage","res","name","role","createdAt","userRole","next","localStorage","setItem","JSON","stringify","isLogged","parse","getItem","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["/Users/giulia/Documents/Progetti/roma_in_mostra/client/src/app/service/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  apiBaseUrl = 'api/users';\n\n  constructor(\n    private http: HttpClient,\n    private UserService: UserService,\n  ) { }\n\n  login(email: string, password: string): Observable<any>{\n    const user = {email: email, password: password}\n    return this.http.post<any>(`${this.apiBaseUrl}/login`, user);\n  }\n\n  saveStorage(res: any){\n    const user = {\n      name: res.name,\n      email: res.email,\n      password: res.password,\n      role: res.role,\n      createdAt: res.createdAt,\n    }\n\n    this.UserService.userRole.next(res.role);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  isLogged(): boolean{\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  logout(): void{\n    localStorage.removeItem('user');\n    this.UserService.userRole.next('');\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}